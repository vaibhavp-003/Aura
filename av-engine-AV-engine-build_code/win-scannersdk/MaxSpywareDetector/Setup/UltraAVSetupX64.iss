; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
AppName=UltraAV
AppVerName=UltraAV 10.0.0.001
AppPublisher=Aura
AppPublisherURL=https://www.aura.com/
AppSupportURL=https://www.aura.com/
AppUpdatesURL=https://www.aura.com/
DefaultDirName={pf}\UltraAV
DefaultGroupName=UltraAV
OutputBaseFilename=ULTRAAVX64
AlwaysRestart=false
ShowLanguageDialog=no

SetupIconFile=UltraAV\Setup\MainIconNew.ico
Compression=lzma/ultra
SolidCompression=true
BackColor=$ff0000
BackSolid=false
WindowShowCaption=true
WindowStartMaximized=true
WindowVisible=false
WindowResizable=true
WizardImageFile=UltraAV\Setup\setup1.bmp
WizardImageBackColor=$800040
DisableDirPage=true
DisableProgramGroupPage=true
DisableFinishedPage=true
AlwaysShowComponentsList=false
ShowComponentSizes=false
FlatComponentsList=false
DisableReadyPage=true
VersionInfoVersion=10.0.0.001
VersionInfoCompany=Aura
VersionInfoDescription=UltraAV
VersionInfoTextVersion=10.0.0.001
AppCopyright=Aura
InternalCompressLevel=normal
AppVersion=10.0.0.001
UninstallDisplayName=UltraAV
WizardSmallImageFile=UltraAV\Setup\setup1.bmp
PrivilegesRequired=admin
MinVersion=0,6.1
OnlyBelowVersion=0,0
OutputDir=Output
UninstallRestartComputer=true
UninstallDisplayIcon={app}\MainIconNew.ico
ArchitecturesInstallIn64BitMode=x64
UsePreviousAppDir=false
UsePreviousGroup=false
SignedUninstaller=false
AppID=UltraAV
Uninstallable=false
ArchitecturesAllowed=x64
[Tasks]
; NOTE: The following entry contains English phrases ("Create a desktop icon" and "Additional icons"). You are free to translate them into another language if required.

[Languages]

[Files]
Source: ..\..\MaxSpywareDetector\Setup\Depends\Ver.txt; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Output\Win32\Release\binaries\AuCheckDll.dll; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\AuUltraAV\Win32\Release\Binaries\AuGuiRes.dll; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: UltraAVSetting\*.ini; DestDir: {app}\Setting; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\Drivers\Win8\x64\*.*; DestDir: {tmp}; Flags: dontcopy

Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuCoreScanner.dll; DestDir: {app}; Flags:  overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuSecure.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuScanner.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuActiveProtection.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuActMon.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuSpecialSpyHandler.dll; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxAntiVirus\Output\x64\Release\Binaries\AuAVRepair.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxAntiVirus\Output\x64\Release\Binaries\AuAVPMScan.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxAntiVirus\Output\x64\Release\Binaries\AuAVDBScan.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxAntiVirus\Output\x64\Release\Binaries\AuPDFDecrypt.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxAntiVirus\Output\x64\Release\Binaries\AuRansomPatternScan.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\Max Secure\Output\x64\Release\Binaries\DisasmEngineDll.dll; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxAntiVirus\Output\x64\Release\Binaries\AuMLHeurScan.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxAntiVirus\Output\x64\Release\Binaries\AuAVDBScanCrypt.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion

;Unpacker
Source: ..\..\NIH\Output\x64\Release\Binaries\AuUPXUnpacker.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\NIH\Output\x64\Release\Binaries\AuUPXUnpacker64.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuUnpacker.dll; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Output\Win32\Release\Binaries\AuUnpackExe.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Output\Win32\Release\Binaries\AuUnpacker32.dll; DestDir: {app}\UPack32; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\NIH\Output\Win32\Release\Binaries\AuUPXUnpacker.dll; DestDir: {app}\UPack32; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\NIH\Output\Win32\Release\Binaries\AuUPXUnpacker64.dll; DestDir: {app}\UPack32; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\NIH\x64\unrar\unrar.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion

Source: ..\..\NIH\Win32\PECompact\pec2codec_aplib.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\NIH\Win32\PECompact\pec2codec_ffce.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\NIH\Win32\PECompact\PEC2CODEC_JCALG1.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\NIH\Win32\PECompact\pec2codec_lzma.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\NIH\Win32\PECompact\pec2codec_lzma2.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion

;ML
Source: ..\..\MaxSpywareDetector\Setup\Tools\MLcpp\x64\*; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\MLcpp\Data\tree.json; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\MLcpp\Data\OTHER.json; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
;RandPatScan
Source: ..\..\MaxAntiVirus\Output\x64\Release\Binaries\AuRandPattern.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\Python64\SetupFiles\*; DestDir: {app}; Flags: ignoreversion replacesameversion overwritereadonly recursesubdirs
Source: ..\..\MaxSpywareDetector\Setup\Tools\PythonData\*; DestDir: {app}; Flags: ignoreversion replacesameversion overwritereadonly recursesubdirs
;ExtractionDll
Source: ..\..\Max Secure\Output\x64\Release\Binaries\Au7zUnpacker.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\7zip\x64\7z.dll; DestDir: {app}; Flags: ignoreversion replacesameversion overwritereadonly recursesubdirs

;YaraScanner
Source: ..\..\MaxSpywareDetector\Setup\Tools\Yara\x64\AuYrScanner.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\Yara\YrScanDB.yar; DestDir: {app}; Flags: onlyifdoesntexist overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\Icon\IconDB.DB; DestDir: {app}; Flags: onlyifdoesntexist overwritereadonly ignoreversion replacesameversion


Source: ..\..\MaxSpywareDetector\Setup\UltraAV64\*; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion recursesubdirs
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuBKComDll.dll; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\UltraAV\Setup\MainIconNew.ico; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\WscFiles\x64\AuWatchDogService.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\WscFiles\x64\AuUpdateMrg.dll; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\WscFiles\x64\AuWsRMsg.exe; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\PPLFiles\x64\AuPSrvOpt.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion 
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuTray.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuLiveUpdate.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuLiveUpdateDLL.dll; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuSrvOpt.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuShellExt.dll; DestDir: {app}; Flags: uninsrestartdelete ignoreversion overwritereadonly replacesameversion regserver noregerror
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuNotifications.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\ScapeGoatData\FileData.zip; DestDir: {app}; Flags: replacesameversion overwritereadonly ignoreversion
Source: ..\..\MaxSpywareDetector\Setup\ScapeGoatData\FileData.ini; DestDir: {app}\FileData; Flags: replacesameversion overwritereadonly ignoreversion
Source: ..\..\MaxSpywareDetector\Setup\ScapeGoatData\Data*.*; DestDir: {app}\FileData; Flags: replacesameversion overwritereadonly ignoreversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuUninstall.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuDBServer.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\AppExtListMgr.DB; DestDir: {app}\Tools; Flags: onlyifdoesntexist
Source: ..\..\MaxSpywareDetector\Setup\Tools\AppExcludeFileExtList.DB; DestDir: {app}\Tools; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\CompSafeList.ini; DestDir: {app}\Setting; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Output\x64\Release\Binaries\AuDigiScan.dll; DestDir: {app}; Flags: ignoreversion replacesameversion overwritereadonly
Source: ..\..\MaxSpywareDetector\Setup\Depends\ScanStatusLastScan.ini; DestDir: {app}\Setting; Flags: ignoreversion overwritereadonly replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\WscFiles\WsSettings.ini; DestDir: {app}\Setting; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\Filter.ini; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\WhiteINI.ini; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Depends\SecurityProductInformation.ini; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\NIH\x64\DBGHELP\dbghelp.dll; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Depends\InstantScan.ini; DestDir: {app}\setting; Flags: onlyifdoesntexist overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Depends\SocketSettings.ini; DestDir: {app}\setting; Flags: onlyifdoesntexist overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Data\HostListSD.ini; DestDir: {app}\setting; Flags: overwritereadonly ignoreversion replacesameversion

Source: ..\..\MaxSpywareDetector\Setup\Tools\WinNotification\x64\AuWinToastMgr.dll; DestDir: {app}; Flags: uninsrestartdelete overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\WinNotification\x64\vcruntime140_1.dll; DestDir: {app}; Flags: uninsrestartdelete overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\WinNotification\Notifilogo.png; DestDir: {app}; Flags: uninsrestartdelete overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\RansExtLst.ini; DestDir: {app}\Setting; Flags: ignoreversion replacesameversion overwritereadonly

;AMSI
Source: ..\..\MaxSpywareDetector\Setup\Tools\AMSI\x64\*.*; DestDir: {app}\AMSI; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Tools\AMSI\AMSI_Provider\x64\AuAMSIProvider.dll; DestDir: {app}\AMSI; Flags: uninsrestartdelete ignoreversion overwritereadonly replacesameversion regserver noregerror


Source: ..\..\MaxSpywareDetector\Setup\Depends\x64\FIC.db; DestDir: {app}; Flags: overwritereadonly ignoreversion replacesameversion
Source: ..\..\MaxSpywareDetector\Setup\Anit-Ransom-FileData\*.*; DestDir: {app}\RanFileData; Flags: overwritereadonly ignoreversion replacesameversion

;DB
Source: Data\SDR1.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV1.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV2.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV3.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV4.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV5.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV6.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV7.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV8.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV9.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV10.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV11.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV12.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV13.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDV14.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion

Source: Data\SD1.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD2.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD10.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD11.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD14.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD20.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD23.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD24.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD25.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD26.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD32.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD40.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD40.CT; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD40.NM; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD40.ID; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD42.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD44.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion
Source: Data\SD45.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD46.DB; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD47.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SDWK.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly replacesameversion


Source: Data\SD43_0.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_1.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_2.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_3.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_4.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_5.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_6.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_7.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_8.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_9.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_A.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_B.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_C.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_D.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_E.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_F.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_0T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_1T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_2T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_3T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_4T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_5T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_6T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_7T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_8T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_9T.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_AT.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_BT.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_CT.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_DT.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_ET.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion
Source: Data\SD43_FT.db; DestDir: {app}\Data\{code:getDatabaseVersion}; Flags: overwritereadonly ignoreversion replacesameversion

[Icons]
Name: {group}\UltraAV; Filename: {app}\AuMainUI.exe; IconFilename: {app}\MainIconNew.ico
Name: {commondesktop}\UltraAV; Filename: {app}\AuMainUI.exe; IconFilename: {app}\MainIconNew.ico

[Run]
; NOTE: The following entry contains an English phrase ("Launch"). You are free to translate it into another language if required.

[Registry]
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: ProductVersionNo; ValueData: {code:getProductVersion}; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: DatabaseVersionNo; ValueData: {code:getDatabaseVersion}; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: VirusVersionNo; ValueData: {code:getVirusVersionNo}; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: CurrentMDB; ValueData: {app}\Data\{code:getDatabaseVersion}\; Flags: uninsdeletekey; Permissions: authusers-full users-full
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: UpdateVersion; ValueData: {code:getUpdateVersionNo}; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: DatabaseMiniVersionNo; ValueData: {code:getDatabaseMiniVersion}}; Flags: uninsdeletekey

Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: AppPath; ValueData: {app}\AuMainUI.exe; Flags: uninsdeletekey; Permissions: authusers-full users-full
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Control\Lsa; ValueType: dword; ValueName: limitblankpassworduse; ValueData: 0
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Run; ValueType: string; ValueName: AuActiveMonitor; ValueData: """{app}\AuTray.exe"" -AUTO"; Flags: uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: DomainName; ValueData: https://www.aura.com; Flags: uninsdeletekey preservestringtype
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: LastLiveUpdate; ValueData: {code:getLastLiveudateDate}; Flags: uninsdeletekey

Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: QuarantinedCnt; ValueData: 1; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: ShowHTMLButton; ValueData: 1; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: Quarantine; ValueData: 0
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: InstallationDate; ValueData: {code:getCurrentDate}; Flags: uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: AutoLiveupdate; ValueData: 1; Flags: uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: AutoQuarantine; ValueData: 0; Flags: uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: AutoScan; ValueData: 0; Flags: uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: ClearLogCnt; ValueData: 0; Flags: createvalueifdoesntexist uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: IsUpdating; ValueData: 0; Flags: uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: AppFolder; ValueData: {app}\; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: CleanTemp; ValueData: 1; Flags: uninsdeletevalue createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: CleanTempIE; ValueData: 1; Flags: uninsdeletevalue createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: AutoScanTime; Flags: uninsdeletekey; ValueData: {code:getCurrentDate}
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: SplashScreen; ValueData: 1; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: SelectedDrive; ValueData: {code:getRootDir}; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: KeyLoggerScan; ValueData: 1; Flags: createvalueifdoesntexist uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: RootkitScan; ValueData: 1; Flags: createvalueifdoesntexist uninsclearvalue


Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: AutoLiveupdateOff; ValueData: 1; Flags: createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: FullScanDone; ValueData: 0; Flags: createvalueifdoesntexist uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: RootkitQuarantine; ValueData: 0; Flags: uninsclearvalue deletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: RootkitQuarantineAlway; ValueData: 1; OnlyBelowVersion: 0,0; Flags: uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: RootkitFound; ValueData: 0; Flags: createvalueifdoesntexist uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: EPVersionNo; ValueData: 1.0.0.5; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: MD5VersionNo; ValueData: 1.0.0.5; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: LiveSupport; ValueData: 1; Flags: uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: PlaySound; ValueData: 1; Flags: createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: FULLLIVEUPDATE; ValueData: 0; Flags: uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: SendErrorReport; ValueData: 1; Flags: uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: USBScan; ValueData: 1; Flags: createvalueifdoesntexist uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: SetupLaunch; ValueData: 0; Flags: uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: RootKitWhiteINIVersion; ValueData: 1.0.0.8
Root: HKLM; Subkey: SOFTWARE\UltraAV; Permissions: everyone-full; Flags: uninsdeletekeyifempty
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: USBScanMode; ValueData: 1; Flags: createvalueifdoesntexist uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: ShowUIStatus; ValueData: 1; Flags: uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: ScanQuarantine; ValueData: 1; Flags: uninsdeletevalue createvalueifdoesntexist

Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: FirstFWBoot; ValueData: 0; Flags: uninsdeletevalue createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: FirstFWInstall; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: ShowFWUI; ValueData: 1; Flags: uninsdeletevalue createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: USBAppPath; ValueData: {app}\AuUSB.exe; Flags: uninsdeletekey; Permissions: authusers-full users-full
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: LoggingLevel; ValueData: 0; Flags: uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: Windows Firewall; ValueData: 0; Flags: uninsdeletevalue createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: Windows Defender; ValueData: 0; Flags: uninsdeletevalue createvalueifdoesntexist

Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: ProductPatch; ValueData: 0; Flags: deletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: AutoProductPatch; ValueData: 0; Flags: deletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: bActiveProtection; ValueData: 0; Flags: uninsdeletevalue createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: LUSetupLaunch; ValueData: 1; Flags: uninsdeletevalue createvalueifdoesntexist

Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: Language; ValueData: 0

Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: EPMD5Update; ValueData: 0
Root: HKCU; Subkey: SOFTWARE\Microsoft\Internet Explorer\New Windows; Permissions: everyone-full; ValueType: dword; ValueName: PopupMgr; ValueData: 1; Flags: uninsdeletevalue

;to skip compress files
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: SkipCompressedFiles; ValueData: 0; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: IEOffline; ValueData: 1; Flags: createvalueifdoesntexist uninsdeletevalue
;For clean browsers
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: CleanBrowsers; ValueData: 1; Flags: createvalueifdoesntexist uninsdeletevalue

Root: HKCU; Subkey: Software\Microsoft\Windows\CurrentVersion\Internet Settings; ValueType: dword; ValueName: GlobalUserOffline; ValueData: 0; Flags: createvalueifdoesntexist
;BackupUtil
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: AutoStartBackupUtil; ValueData: 0; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: BlockPopup; ValueData: 0; Flags: uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: Toolbar Cleaner; ValueData: 0; Flags: uninsdeletevalue
;To reset SystemFile Protection
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: HostMonitor; ValueData: 0
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: ShowKillPopup; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: TrackingCookie; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: ProcessMonitor; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: HomePage; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: FileAssocMonitor; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: WinRestrictionMonitor; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: IERestrictionMonitor; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\UltraAV\Active Protection; ValueType: dword; ValueName: NetworkMonitor; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: WindowsVersion; ValueData: {code:WindowsVersion}; Flags: createvalueifdoesntexist uninsdeletevalue
;Registry Backup
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: RegLastBackUpDate; ValueData: ; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: RegDay; ValueData: 2; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: CryptMonitor; ValueData: 1; Flags: createvalueifdoesntexist uninsdeletevalue

Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: SetupLaunchReg; ValueData: 1; Flags: uninsclearvalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: MacLearning; ValueData: 1; Flags: createvalueifdoesntexist uninsclearvalue
Root: HKCU; Subkey: SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\Shell\Bags\AllFolders\Shell; ValueType: string; ValueName: FolderType; ValueData: NotSpecified; Flags: createvalueifdoesntexist uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: MLearnVersion; ValueData: {code:getMLearnVersion}; Flags: uninsdeletekey 
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: DigiCat; ValueData: 1; Flags: uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: BackGroundScan; ValueData: 0; Flags: uninsdeletevalue

;YaraScanner
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: string; ValueName: YrScanVersion; ValueData:{code:getYrScanVersion} ; Flags:  createvalueifdoesntexist uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: YrScan; ValueData:1 ; Flags:  createvalueifdoesntexist uninsdeletevalue


Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: YrScanAct; ValueData:1 ; Flags:  uninsdeletevalue
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: MacLearningAct; ValueData:1 ; Flags:  uninsdeletevalue

;cryptfolderbackuprestore
Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: CryptFolder; ValueData:1 ; Flags:  createvalueifdoesntexist uninsdeletevalue

Root: HKLM; Subkey: SOFTWARE\UltraAV; ValueType: dword; ValueName: TModeType; ValueData:0 ; Flags:  uninsdeletevalue

;Drivers
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuActMonDrv; Flags: uninsdeletekey
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuActMonDrv; Flags: uninsdeletekey deletevalue; ValueType: dword; ValueName: EnableCopyPaste; ValueData: 1
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuActMonDrv; Flags: uninsdeletekey; ValueType: string; ValueName: ImagePath; ValueData: System32\drivers\AuActMonDrv.sys
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuActMonDrv; Flags: uninsdeletekey deletevalue; ValueType: dword; ValueName: EnableReplicating; ValueData: 0
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuFsMgrDrv; Flags: uninsdeletekey dontcreatekey
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuFsMgrDrv; Flags: uninsdeletekey; ValueType: string; ValueName: IniFileName; ValueData: \??\{app}\Setting\AuManager.ini; MinVersion: 0,5.01.2600
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuFsMgrDrv; Flags: uninsdeletekey; ValueType: string; ValueName: SDAppPath; ValueData: \??\{app}\; MinVersion: 0,5.01.2600
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuFsMgrDrv; Flags: uninsdeletekey; ValueType: string; ValueName: SystemPath; ValueData: {sys}\
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuFsMgrDrv; Flags: uninsdeletekey; ValueType: string; ValueName: ImagePath; ValueData: System32\drivers\AuFsMgrDrv.sys
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuFSProcDrv; Flags: uninsdeletekey; ValueType: string; ValueName: BlockTrojanList; ValueData: \??\{app}\Setting\BlockTrojan.ini
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Services\AuFSProcDrv; Flags: uninsdeletekey; ValueType: string; ValueName: ImagePath; ValueData: System32\drivers\AuFSProcDrv.sys

;Uninstall
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: dword; ValueName: NoRepair; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: dword; ValueName: NoModify; ValueData: 1
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: URLUpdateInfo; ValueData: https://www.aura.com/; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: HelpLink; ValueData: https://www.aura.com/; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: URLInfoAbout; ValueData: https://www.aura.com/; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: Publisher; ValueData: Aura; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: DisplayVersion; ValueData: {code:getProductVersion}; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: UninstallString; ValueData: {app}\AuUninstaller.exe -ULTRAAV; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: DisplayName; ValueData: UltraAV; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: Inno Setup: Icon Group; ValueData: UltraAV; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: InstallLocation; ValueData: {app}; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: Inno Setup: App Path; ValueData: {app}; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\UnInstall\UltraAV; ValueType: string; ValueName: DisplayIcon; ValueData: {app}\MainIconNew.ico; Flags: uninsdeletekey preservestringtype

[_ISTool]
Use7zip=false

[Dirs]
Name: {app}; Flags: uninsalwaysuninstall; Tasks: ; Permissions: authusers-full users-full
Name: {app}\Log; Flags: uninsalwaysuninstall; Tasks: ; Permissions: authusers-full users-full
Name: {app}\Quarantine; Permissions: authusers-full users-full
Name: {app}\Tools; Flags: uninsalwaysuninstall; Permissions: authusers-full users-full

[InstallDelete]

[Code]
const
  MB_ICONINFORMATION = $40;
  WM_CLOSE			 = $10;
var
   FinishedInstall: Boolean;
   FinishedUnInstall : Boolean;
   IsFinishUninstall: Boolean;
   ProgressPage: TOutputProgressWizardPage;
   SilentSetup: boolean;
   IsReinstall: Boolean;
   IsAbortSetup: Boolean;
   ProgressFileName: String;
   PrevProgress: Integer;
   ProgressStatus: String;
 
function SetSettingInstall(iSettingID: Integer): Boolean;
external 'SetSetting@files:AuCheckDll.dll stdcall';

function DLLFunction(hWnd: Integer; uType: Cardinal; csDownloadLink: String; b64bitSetup: Boolean; csProdReg: String ): Boolean;
external 'DLLFunction@files:AuCheckDll.dll stdcall';

function DLLCloseFunction(hWnd: Integer; uType: Cardinal;iAppExe: Integer;csProdName: String): Boolean;
external 'DLLCloseFunction@files:AuCheckDll.dll stdcall';

function InstallProtectorDriver(is64bitSetup: Boolean;csAppFolderPath: String;csTempPath: String; isBeforeSetup: Boolean): Boolean;
external 'InstallProtectorDriver@files:AuCheckDll.dll stdcall';


function ReInstallDriverHook(): Boolean;
external 'ReInstallDriverHook@files:AuCheckDll.dll stdcall';

function EnableAutoscanAndSchedular(): Boolean;
external 'EnableAutoscanAndSchedular@files:AuCheckDll.dll stdcall';

function WinELDriver(): Boolean;
external 'WinELDriver@files:AuCheckDll.dll stdcall';

function CreateRansomBackup(csAppName: String): Boolean;
external 'CreateRansomBackup@files:AuCheckDll.dll stdcall';

function CleanLocalDB(): Boolean;
external 'CleanLocalDB@files:AuCheckDll.dll stdcall';

function SetTimer(
  Wnd: LongWord; IDEvent, Elapse: LongWord; TimerFunc: LongWord): LongWord;
  external 'SetTimer@user32.dll stdcall';


function WriteStatusInFile(): Boolean;
begin
  if FileExists(ProgressFileName) then
     begin
       SaveStringToFile(ProgressFileName, ProgressStatus, False);
     end;
	 Result := true;
end;

procedure ReportProgressProc(
  H: LongWord; Msg: LongWord; Event: LongWord; Time: LongWord);
var
  Progress: Integer;
  
begin
  try
    Progress :=
      (WizardForm.ProgressGauge.Position * 100) div WizardForm.ProgressGauge.Max;
    if (PrevProgress <> Progress) AND (Progress < 99) then
    begin
      if(Length(WizardForm.FilenameLabel.Caption)>0)    then
      begin
        ProgressStatus :=  IntToStr(Progress)+ '=' +   WizardForm.StatusLabel.Caption + ' '+WizardForm.FilenameLabel.Caption;
      end
      else
      begin
        ProgressStatus :=  IntToStr(Progress)+ '=' +   WizardForm.StatusLabel.Caption;
      end;
	  PrevProgress := Progress;
      WriteStatusInFile();
    end;
  except
    Log('Exception saving progress');
  end;
end;  
function IsOSWin10(): Boolean;
var
  Version: TWindowsVersion;
  S: String;
begin
  GetWindowsVersionEx(Version);
  if (Version.Major >=10)then
  begin
    Result := True;
  end
  else
  begin
	Result := False;
  end;
end;
function WindowsVersion(Param: String): String;
var
  Version: TWindowsVersion;
  S: String;
begin
  GetWindowsVersionEx(Version);   
  if (Version.ProductType <> VER_NT_WORKSTATION)
  then
  begin
    S := Format('%d.%d;Server', [Version.Major,Version.Minor]);
    end
  else
  begin
    S := Format('%d.%d;Workstation', [Version.Major,Version.Minor]);
  end;
	Result := S;  
end;


function InitializeSetup(): Boolean;
var
  hWnd		: Integer;
  bReturnVal: Boolean;
  strCmdLine:String;
  MessageType: Integer;
  csProdReg: String;
  
  csPath: String;
 begin
 	 IsAbortSetup:= false;
	SetSettingInstall(2003);
	SilentSetup:= false;
	
	strCmdLine:= GetCMDTail();
	if(Pos('/VERYSILENT', strCmdLine) > 0)then begin
		SilentSetup:= true;
	end;
	
	Result := true;

end;
function NextButtonClick(CurPage: Integer): Boolean;
var
  hWnd		: Integer;
  I: Integer;
  ErrorCode		: Integer;
  bReturnVal: Boolean;
  csDownloadUrl: String;
  csProdReg: String;
  MessageType: Integer;
  csSecName: String;
  csProdName: String;
  dwFW: Cardinal;
  bIsWin10: Boolean;
  csPath: String;
begin
	if CurPage = 10 then begin

		ProgressPage.SetText('Initializing the Setup...', '');
		ProgressPage.SetProgress(0, 0);
		ProgressPage.Show;
		ProgressPage.SetProgress(10, 100);
		ProgressStatus := '0'+ '=' +   'Initializing the Setup...';
		WriteStatusInFile();

		SilentSetup:= false;
		ExtractTemporaryFile('AuGuiRes.dll');
		ExtractTemporaryFile('CurrentSettings.ini');
		ExtractTemporaryFile('English_Strings.ini');
		CreateDir(ExpandConstant('{tmp}\Setting'));
		FileCopy(ExpandConstant('{tmp}\CurrentSettings.ini'),ExpandConstant('{tmp}\Setting\CurrentSettings.ini'), False);
		DeleteFile(ExpandConstant('{tmp}\CurrentSettings.ini'));
		
		if  RegKeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\UltraAV') then
		begin
			IsReinstall := true;
			MessageType:= 10;
		end;
	
		csDownloadUrl:= 'UltraAV';
		csProdReg := 'SOFTWARE\UltraAV'
		hWnd := StrToInt(ExpandConstant('{wizardhwnd}'));

		ProgressPage.SetProgress(20, 100);
		ProgressPage.SetProgress(30, 100);
		ProgressPage.SetProgress(40, 100);
		bReturnVal:= DLLFunction(hWnd, MessageType, csDownloadUrl, true, csProdReg);
		
		ProgressPage.SetProgress(50, 100);
		if bReturnVal = True then
		begin
			ProgressPage.Hide;
			Result := False;
			IsAbortSetup := true;
		end;
		ProgressPage.SetText('Installing Protection Drivers...', '');
		ProgressPage.SetProgress(60, 100);
		
		ProgressStatus := '1'+ '=' +   'Installing Protection Drivers...';
		WriteStatusInFile();
		
		bIsWin10 := IsOSWin10();
		if bIsWin10 = True then
		begin
			ExtractTemporaryFile('AuFSProcDrv.sys');
			ExtractTemporaryFile('AuActMonDrv.sys');
			ExtractTemporaryFile('AuFsMgrDrv.sys');
			ExtractTemporaryFile('AuSecPPLElm.sys');
			FileCopy(ExpandConstant('{tmp}\AuFSProcDrv.sys'),ExpandConstant('{sys}\drivers\AuFSProcDrv.sys'), False);
			FileCopy(ExpandConstant('{tmp}\AuActMonDrv.sys'),ExpandConstant('{sys}\drivers\AuActMonDrv.sys'), False);
			FileCopy(ExpandConstant('{tmp}\AuFsMgrDrv.sys'),ExpandConstant('{sys}\drivers\AuFsMgrDrv.sys'), False);
			FileCopy(ExpandConstant('{tmp}\AuSecPPLElm.sys'),ExpandConstant('{sys}\drivers\AuSecPPLElm.sys'), False);
			if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\EarlyLaunch', 'BackupPath', csPath) then
			begin
				csPath := csPath +'\AuSecPPLElm.sys';
				FileCopy(ExpandConstant('{tmp}\AuSecPPLElm.sys'),csPath, False);
			end;
			if FileExists(ExpandConstant('{sys}\drivers\AuSecPPLElm.sys')) = True then
			begin
				WinELDriver();
			end;
			RegWriteDWordValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\UltraAV','Win10', 1);
		end
		else
		begin
			RegWriteDWordValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\UltraAV','Win10', 0);
		end;
		
		ProgressPage.SetProgress(70, 100);
		
		InstallProtectorDriver(true,ExpandConstant('{tmp}\'),ExpandConstant('{tmp}\'), false);
	
		DeleteFile(ExpandConstant('{pf}\UltraAV\AuShellExt1.dll'));
		RenameFile(ExpandConstant('{pf}\UltraAV\AuShellExt.dll'), ExpandConstant('{pf}\UltraAV\AuShellExt1.dll'));
		DeleteFile(ExpandConstant('{pf}\UltraAV\AMSI\AuAMSIProvider1.dll'));
		RenameFile(ExpandConstant('{pf}\UltraAV\AMSI\AuAMSIProvider.dll'), ExpandConstant('{pf}\UltraAV\AMSI\AuAMSIProvider1.dll'));
		ProgressPage.SetProgress(80, 100);
		ProgressPage.SetText('Initializing Completed...', '');
		ProgressPage.SetProgress(90, 100);
		ProgressPage.SetProgress(100, 100);
		
		ProgressStatus := '1'+ '=' +   'Initializing Completed...';
		WriteStatusInFile();
		
		if MessageType = 10 then
		begin
			csProdName :='UltraAV'
			MessageType := 13
			bReturnVal:= DLLCloseFunction(hWnd, MessageType,1,csProdName);
			if bReturnVal = false then
			begin
				IsAbortSetup := true;
				Result := False;
			end;
		end;

	end else
	begin
		ProgressPage.Hide;
	end;
   ProgressPage.Hide;
   Result := True;
end;

procedure InitializeWizard();
var
  bShowPage: Boolean;
begin
  { Custom wizard pages }
	ProgressPage := CreateOutputProgressPage('Preparing to Install...',' Please wait...');
	  
	////////ProgressFileName := ExpandConstant('{win}\Temp\ulavtmplog.txt');
  ProgressFileName := ExpandConstant('{commonappdata}\ulavtmplog.txt');
	//DeleteFile(ProgressFileName);
	ProgressStatus := '0'+ '=' +   'Preparing to Install...';
	WriteStatusInFile();
   
	SetTimer(0, 0, 200, CreateCallback(@ReportProgressProc));
end;

procedure DeinitializeSetup();
var
   bReturnVal: Boolean;
   ErrorCode: Integer;
   strVer: String;
   hWnd:HWND;
begin
	 if FinishedInstall then
	 begin
		ProgressStatus :=  '99'+ '=' +   'Finalize Installation';
		WriteStatusInFile();
		CleanLocalDB();
		CreateRansomBackup( ExpandConstant('{app}\RanFileData'));
		DeleteFile(ExpandConstant('{app}\Ver.txt'));
		EnableAutoscanAndSchedular();
		ProgressStatus :=  '100'+ '=' +   'Finished Installation';
		WriteStatusInFile();
	end;
end;

procedure CurPageChanged(CurPageID: Integer);
var
  Page: TWizardPage;
  URLLabel: TNewStaticText;
begin
	if IsAbortSetup then
	begin
		ProgressPage.Hide;
		Wizardform.NextButton.Enabled := False;
		abort();
	 end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
ErrorCode: Integer;
bIsWin10: Boolean;
begin
	if IsAbortSetup then
	begin
		ProgressPage.Hide;
		Wizardform.NextButton.Enabled := False;
		abort();
	end;
   if CurStep = ssDone then
    FinishedInstall := True;

   if CurStep = ssPostInstall then
   begin
		ProgressStatus :=  '99'+ '=' +   'Finalizing Installation';
		WriteStatusInFile();
		DeleteFile(ExpandConstant('{sd}\AuLiveUpdate\Data\DBVersion.ini'));
		//set the language code into the ini file
		DeleteFile(ExpandConstant('{app}\Ver.txt'));
		if IsReinstall then
		begin
			ShellExec('open', ExpandConstant('{app}\AuSrvOpt.exe'), 'ASKFORRESTART', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
			Sleep(2000);
		end
		else
		begin
			ShellExec('open', ExpandConstant('{app}\AuSrvOpt.exe'), 'NOUI', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
			Sleep(2000);
			ReInstallDriverHook();
		end;
	
	end;
end;
function getProductVersion(Param: String): String;
var
	csKey : String;
begin
	csKey := GetIniString('Version','ProductVersionNo','0',ExpandConstant('{app}\Ver.txt'));
	//MsgBox(csKey, mbConfirmation, MB_OK);
	Result := csKey;
end;
function getDatabaseVersion(Param: String): String;
var
	csKey : String;
begin
	csKey := GetIniString('Version','DatabaseVersionNo','0',ExpandConstant('{app}\Ver.txt'));
	Result := csKey;
end;
function getDatabaseMiniVersion(Param: String): String;
var
	csKey : String;
begin
	csKey := GetIniString('Version','DatabaseMiniVersionNo','0',ExpandConstant('{app}\Ver.txt'));
	Result := csKey;
end;

function getMLearnVersion(Param: String): String;
var
	csKey : String;
begin
	csKey := GetIniString('Version','MLearnVersion','0',ExpandConstant('{app}\Ver.txt'));
	Result := csKey;
end;
function getYrScanVersion(Param: String): String;
var
	csKey : String;
begin
	csKey := GetIniString('Version','YrScanVersion','0',ExpandConstant('{app}\Ver.txt'));
	Result := csKey;
end;

function getRootDir(Param: String): String;
var
	csRoot : String;
begin
	csRoot := ExpandConstant('{sd}');
	csRoot := csRoot +',';
	Result := csRoot;
end;



function getVirusVersionNo(Param: String): String;
var
	csKey : String;
begin
	csKey := GetIniString('Version','VirusVersionNo','0',ExpandConstant('{app}\Ver.txt'));
	Result := csKey;
end;

function getCurrentDBVersion(Param: String): String;
var
	csVer : String;
begin
	RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\UltraAV','CurrentMDB', csVer)
	Result := csVer;
end;


function getUpdateVersionNo(Param: String): String;
var
	csKey : String;
begin
	csKey := GetIniString('Version','UpdateVersion','0',ExpandConstant('{app}\Ver.txt'));
	Result := csKey;
end;

function getCurrentDate(Param: String): String;
var
  csDate : String;
begin
 csDate := GetDateTimeString('m/d/yyyy', #0, #0);
 Result := csDate;
end;

function getLastLiveudateDate(Param: String): String;
var
  csDate : String;
begin
 csDate := GetDateTimeString('d-mmm-yyyy', #0, #0);
 Result := csDate;
end;