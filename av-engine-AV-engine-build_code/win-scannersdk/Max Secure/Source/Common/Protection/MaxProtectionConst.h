#pragma once
enum Max_Protected_Processes
{
	MAX_PROC_MAXSDUI,
	MAX_PROC_MAXSDTRAY,
	MAX_PROC_MAXUSB,
	MAX_PROC_MAXWATCHDOG,
	MAX_PROC_MAXSCANNER_OPTION,
	MAX_PROC_MAXSCANNER_USB,
	MAX_PROC_MAXSCANNER_MAIN,
	MAX_PROC_MAXSCANNER_HE,
	MAX_PROC_KEYLOGGERSCANNER,
	MAX_PROC_MAXCMDSCANNER,
	MAX_PROC_MAXDSRV,
	MAX_PROC_MAXPROTECTOR,
	MAX_PROC_MAXMERGER,
	MAX_PROC_MAXAVSETUP,
	MAX_PROC_SETUP,
	MAX_PROC_IEXPLORER,
	MAX_PROC_LIVEUPDATE,
	MAX_PROC_NOTIFICATION,
	MAX_PROC_MIGRATESD,
	MAX_PROC_MAXACTMON,
	MAX_PROC_MAXUSBPROC,
	MAX_PROC_MAXPROCSCN,
	MAX_PROC_MAXREGISTRYBACKUP,
	MAX_PROC_MAXROOTKITSCANNERUI,
	MAX_PROC_MAXUNINSTALLER,
	MAX_PROC_SENDREPORT,
	MAX_PROC_SUBMITSAMPLES,
	MAX_PROC_SDFRAUDTOOLFIX,
	MAX_PROC_MAXROOTKITSCANNER,
	MAX_PROC_MAXFSMON,
	MAX_PROC_MAXWSMON,
	MAX_PROC_MAXWSRMON,

	//Tools
	MAX_PROC_BACKUPRESTOREUTILITY,
	MAX_PROC_CMDREGISTRATION,
	MAX_PROC_MAXCLEANSYSVOLUME,
	MAX_PROC_MAXGENPROCHOST,
	MAX_PROC_MAXKIDOFIX,
	MAX_PROC_MAXREGISTRYFIX,
	MAX_PROC_MAXSALCLN,
	MAX_PROC_MAXSERVICESLIST,
	MAX_PROC_MAXTRJSCN,
	MAX_PROC_MAXUNHIDE,
	MAX_PROC_MAXUPDATEFIX,
	MAX_PROC_SETDACL,
	MAX_PROC_MAXSECUREREPORTS,

	//Firewall
	MAX_PROC_DRIVER_MGR,
	MAX_PROC_INTERSECINTERFACEXP,
	MAX_PROC_INTERSECSRVXP,
	MAX_PROC_MAILPROXY,
	MAX_PROC_FIREWALLSERVICE,

	MAX_PROC_MTS_UI,
	MAX_PROC_MTS_SCH,
	MAX_PROC_MTS_GADGET,

	//Outlook
	MAX_PROC_OUTLOOK,					// Do not add this in Process protection

	MAX_PROC_MAXPWDMGR,

	MAX_PROC_CLOUAVUI,
	MAX_PROC_MAXOPTCL,
	MAX_PROC_MAXWMGRSRV,
	MAX_PROC_MAXSECURECMD,

	MAX_PROC_LAPTOPTRACKER,
	MAX_PROC_MAXFIM,
	MAX_PROC_MAXRESERVE3,
	MAX_PROC_MAXRESERVE4,

	MAX_PROC_MAX_PROC_LAST_ENTRY		// Always add new application above this entry
};

const static int IOCTL_PAUSE_PROTECTION		= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8001, METHOD_NEITHER, FILE_ANY_ACCESS);
const static int IOCTL_BLOCK_USB_DRIVE		= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8002, METHOD_BUFFERED, FILE_ANY_ACCESS);
const static int IOCTL_UNBLOCK_USB_DRIVE	= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8003, METHOD_BUFFERED, FILE_ANY_ACCESS);
const static int IOCTL_DISCONNECT_USB_DRIVE	= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8004, METHOD_BUFFERED, FILE_ANY_ACCESS);
const static int IOCTL_RESUME_PROTECTION	= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8005, METHOD_IN_DIRECT, FILE_ANY_ACCESS);
const static int IOCTL_REGISTER_PROCESSID	= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8006, METHOD_BUFFERED, FILE_ANY_ACCESS);
const static int IOCTL_RELOAD_INI			= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8007, METHOD_IN_DIRECT, FILE_ANY_ACCESS);
const static int IOCTL_STOP_FOLDER_SECURE   = CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8008, METHOD_IN_DIRECT, FILE_ANY_ACCESS);

//Tushar => For Handling IOCT for New Driver
const static int IOCTL_PAUSE_CRYPT_PROTECTION	= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8013, METHOD_NEITHER, FILE_ANY_ACCESS);
const static int IOCTL_RESUME_CRYPT_PROTECTION	= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8014, METHOD_IN_DIRECT, FILE_ANY_ACCESS);

//Tushar => For Handling IOCT for Network Monitor
const static int IOCTL_PAUSE_NETWORK_PROTECTION	= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8016, METHOD_NEITHER, FILE_ANY_ACCESS);
const static int IOCTL_RESUME_NETWORK_PROTECTION	= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x8017, METHOD_IN_DIRECT, FILE_ANY_ACCESS);

const static int IOCTL_START_LOGGING			= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x80050, METHOD_IN_DIRECT, FILE_ANY_ACCESS);
const static int IOCTL_STOP_LOGGING			= CTL_CODE (FILE_DEVICE_UNKNOWN, 0x80051, METHOD_IN_DIRECT, FILE_ANY_ACCESS);

const static int IOCTL_INSTALL_PROTECTION = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x8055, METHOD_NEITHER, FILE_ANY_ACCESS);
const static int IOCTL_STOP_INSTALL_PROTECTION = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x8056, METHOD_NEITHER, FILE_ANY_ACCESS);